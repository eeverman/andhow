<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.yarnandtail</groupId>
		<artifactId>andhow-parent</artifactId>
		<version>0.4.2-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<artifactId>andhow-annotation-processor-tests</artifactId>
	<packaging>jar</packaging>
	<name>AndHow Annotation Processor Tests</name>
	<description>
		'Real world' compile-time testing of the annotation processor.
		Its impossible/hard to fully replicate the compile time environment
		including annotation processing, class generation, service loading, etc..
		This module contains standard and edge case classes container AndHow
		properties.  Unit tests then check to ensure that PropertyRegistrars
		were generated and registered as services for each top level class
		containing Properties.
	</description>

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>andhow-core</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>andhow-annotation-processor</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<configuration>
					<skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<profile>
			<id>java9AndBeyond</id>
			<!--
			Its not possible to build a JRE 1.8 compatible jar file using JDK9+ bc of the need to
			use the '-add-modules' feature of JDK9. When '-add-modules' is used, javac refuses to
			compile to a version earlier than 1.9.  Thus, until 1.8 support is dumped by AndHow,
			distributed releases and snapshots need to be done w/ JDK 1.8.
			-->
			<activation>
				<jdk>[1.9,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<inherited>false</inherited>
						<configuration combine.self="override">
<!--							<compilerArgs>-->
<!--								<arg>&#45;&#45;release=8</arg>-->
<!--							</compilerArgs>-->
							<release>8</release>
<!--							<verbose>true</verbose>-->
							<!-- without forking compilation happens in the
							same process, so no arguments are applied -->
							<fork>true</fork>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
