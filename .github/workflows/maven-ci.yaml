name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
#       - name: Set up JDK 8
#         uses: actions/setup-java@v3
#         with:
#           java-version: '8'
#           distribution: 'adopt'
#           cache: maven
#       - name: Build test with coverage
#         run: mvn --batch-mode --update-snapshots clean test -Djacoco.skip=false
      - name: Echo Test
        shell: bash
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
          MY_TOKEN: Blah
        run: |
          echo "Will export...."
          export CODACY_PROJECT_TOKEN=${env:CODACY_PROJECT_TOKEN}
          export MY_TOKEN_EXPORT=${MY_TOKEN}
          echo "Argblarb line 1"
          echo "Argblarb line 2 ${CODACY_PROJECT_TOKEN}"
          echo "Argblarb line 3 ${MY_TOKEN_EXPORT}"
          echo "Argblarb line 5 $CODACY_PROJECT_TOKEN"
          echo "Argblarb line 6 $MY_TOKEN_EXPORT"
          echo "Argblarb line 7 $MY_TOKEN"
          echo "Argblarb line 8"
#       - name: Run codacy-coverage-reporter
#         uses: codacy/codacy-coverage-reporter-action@v1
#         with:
#           project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
#           # or
#           # api-token: ${{ secrets.CODACY_API_TOKEN }}
#           coverage-reports: jacoco*.xml
      - name: Upload coverage to Codacy
        shell: bash
        env:
          # CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
          CODACY_PROJECT_TOKEN: XYZ
        run: |
          export CODACY_PROJECT_TOKEN=${env:CODACY_PROJECT_TOKEN}
          echo "Argblarb line 1"
          echo "Argblarb ${CODACY_PROJECT_TOKEN}"
          echo "Argblarb line 3"
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Java --project-token $CODACY_PROJECT_TOKEN $(find -name 'jacoco*.xml' -printf '-r %p ')
