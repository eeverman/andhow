<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.yarnandtail</groupId>
	<artifactId>andhow-parent</artifactId>
	<version>0.4.3-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>AndHow Parent Project</name>
	<description>
		AndHow is an easy to use configuration framework with strong typing and
		detailed validation for web apps, command line or any application environment.
	</description>

	<mailingLists>
		<mailingList>
			<name>AndHowUser</name>
			<subscribe>https://groups.google.com/forum/#!forum/andhowuser</subscribe>
		</mailingList>
	</mailingLists>

	<!-- Main page list.  Source code at: https://github.com/eeverman/andhow -->
	<url>https://sites.google.com/view/andhow/home</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>
				Copyright 2016 Eric Everman

				Licensed under the Apache License, Version 2.0 (the "License");
				you may not use this file except in compliance with the License.
				You may obtain a copy of the License at

				http://www.apache.org/licenses/LICENSE-2.0

				Unless required by applicable law or agreed to in writing, software
				distributed under the License is distributed on an "AS IS" BASIS,
				WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
				See the License for the specific language governing permissions and
				limitations under the License.
			</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Eric Everman</name>
			<email>eeverman+github@yarnandtail.org</email>
			<id>eeverman</id>
			<timezone>-6</timezone>
			<url>https://github.com/eeverman</url>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git@github.com:eeverman/andhow.git</connection>
		<developerConnection>scm:git:git@github.com:eeverman/andhow.git</developerConnection>
		<url>https://github.com/eeverman/andhow/tree/master</url>
		<tag>andhow-0.4.2-rc2</tag>
	</scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<doclint>none</doclint>
		<jacoco.skip>true</jacoco.skip>
		<maven.javadoc.skip>true</maven.javadoc.skip>
	</properties>

	<modules>
		<module>andhow-core</module>
		<module>andhow-annotation-processor</module>
		<module>andhow</module>
		<module>andhow-testing/andhow-integration-test</module>
		<module>andhow-testing/andhow-core-integration-test</module>
		<module>andhow-testing/andhow-annotation-processor-tests</module>
		<module>andhow-testing/andhow-simulated-app-tests</module>
		<module>andhow-testing/andhow-annotation-processor-test-harness</module>
		<module>andhow-shared-test-utils</module>
		<module>andhow-junit5-extensions</module>
		<module>andhow-test-stubs</module>
	</modules>

	<repositories>
		<repository>
			<id>repo1-maven</id>
			<name>Repo1 Maven</name>
			<url>http://repo1.maven.org/maven/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>

			<!-- Junit5 suite of testing dependencies -->
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-launcher</artifactId>
				<version>1.7.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>5.7.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>5.7.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>2.2</version>
				<scope>test</scope>
			</dependency>

			<!--
			Junit4 used by andhow-test-harness to provide a test base class for
			app dev's using Junit4.
			-->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.13.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>5.7.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- Only used by andhow-testharnass -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>4.3.18.RELEASE</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.h-thurow</groupId>
				<artifactId>simple-jndi</artifactId>
				<version>0.23.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- Optional dependency of simple-jndi -->
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.2.10</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- Teat framework to test Annotation Processors in a simulated compile env. -->
				<groupId>com.google.testing.compile</groupId>
				<artifactId>compile-testing</artifactId>
				<version>0.15</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>3.12.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.stefanbirkner</groupId>
				<artifactId>system-lambda</artifactId>
				<version>1.2.0</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- Only needed to run tests in a version of IntelliJ IDEA that bundles older versions -->
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-lambda</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.3.1</version>
					<executions>
						<execution>
							<id>javadoc-jar</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<includeDependencySources>true</includeDependencySources>
								<doclint>none</doclint>
								<quiet>true</quiet>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-non-release</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<!-- 3.2.2 req'ed for this bug fix: https://issues.apache.org/jira/browse/MNG-4565 -->
									<version>(3.5,4.0)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<!-- 1.8 thru 16 -->
									<version>[1.8.0,17)</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<configuration>
					<formats>
						<format>XML</format>
						<format>HTML</format>
					</formats>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<updateReleaseInfo>false</updateReleaseInfo>
					<deployAtEnd>true</deployAtEnd>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<arguments>remoteDeploy=true</arguments>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>andhow-@{project.version}</tagNameFormat>
					<releaseProfiles>source-and-javadoc-jar,gpg-sign,release-verification</releaseProfiles>
					<useReleaseProfile>true</useReleaseProfile>
					<preparationGoals>clean verify</preparationGoals>
					<goals>deploy</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<skipLocalStaging>true</skipLocalStaging>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>source-and-javadoc-jar</id>
			<properties>
				<maven.javadoc.skip>false</maven.javadoc.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--
					Modules needing javadocs should copy this named profile and just include
					the maven-javadoc-plugin.
					-->
<!--					<plugin>-->
<!--						<groupId>org.apache.maven.plugins</groupId>-->
<!--						<artifactId>maven-javadoc-plugin</artifactId>-->
<!--					</plugin>-->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gpg-sign</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<keyname>${yarnandtail.gpg.keyname}</keyname>
									<passphraseServerId>${yarnandtail.gpg.keyname}</passphraseServerId>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-verification</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-release-requirements</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration combine.self="override">
									<rules>
										<requireMavenVersion>
											<version>(3.5,4.0)</version>
										</requireMavenVersion>
										<requireJavaVersion>
											<!-- Only 1.8 is allowed during a release -->
											<version>[1.8.0,9)</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>AllJDK8</id>
			<activation>
				<jdk>[1.8,1.9)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.8</source>
							<target>1.8</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java9AndBeyond</id>
			<activation>
				<jdk>[1.9,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>${java.vm.specification.version}</source>
							<target>${java.vm.specification.version}</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
